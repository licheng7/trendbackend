<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.arp.trend.repository.biz.manual.StatPatentManualMapper" >
  <resultMap id="BaseResultMap" type="cn.arp.trend.entity.biz.StatPatent" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="jgmc" property="jgmc" jdbcType="VARCHAR" />
    <result column="nf" property="nf" jdbcType="VARCHAR" />
    <result column="zllx" property="zllx" jdbcType="VARCHAR" />
    <result column="ssly" property="ssly" jdbcType="VARCHAR" />
    <result column="lj" property="lj" jdbcType="BIGINT" />
    <result column="xz" property="xz" jdbcType="BIGINT" />
    <result column="sx" property="sx" jdbcType="BIGINT" />
    <result column="yx" property="yx" jdbcType="BIGINT" />
    <result column="datasource_type" property="datasourceType" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, jgmc, nf, zllx, ssly, lj, xz, sx, yx, datasource_type
  </sql>

  <select id="queryByNf" resultMap="BaseResultMap" parameterType="java.lang.String">
    select
      <include refid="Base_Column_List" />
    from
      stat_patent
    <where>
      <![CDATA[nf >= #{startYear}]]>
      AND <![CDATA[nf <= #{endYear}]]>
    </where>
    order by
      jgmc asc, nf asc
  </select>

  <select id="queryZKYPCTPatent1" resultType="java.util.HashMap"
          parameterType="cn.arp.trend.data.model.DO.ZKYPCTPatentQueryDO">
    select
      *
    from
      stat_patent
    <where>
      <![CDATA[nf >= #{query.startYear}]]>
      AND <![CDATA[nf <= #{query.endYear}]]>
      AND zllx=#{query.subDataType}
      <choose>
        <when test="query.fields != null">
          AND ssly in (
          <foreach collection="query.fields" item="item" index="index" separator=",">
            #{item}
          </foreach>
          )
        </when>
        <otherwise>
          AND jgmc IS NOT NULL
          and ssly!="" and ssly is not null and ssly!="NA"
        </otherwise>
      </choose>
      <choose>
        <when test="query.affiliation != null">
          AND jgmc in (
          <foreach collection="query.affiliation" item="item" index="index" separator=",">
            #{item}
          </foreach>
          )
        </when>
      </choose>
    </where>
    order by
      jgmc asc,
      nf asc
  </select>
</mapper>