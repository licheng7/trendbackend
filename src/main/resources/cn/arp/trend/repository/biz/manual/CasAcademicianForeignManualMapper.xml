<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.arp.trend.repository.biz.manual.CasAcademicianForeignManualMapper" >
  <resultMap id="BaseResultMap" type="cn.arp.trend.entity.biz.CasAcademicianForeign" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="stat_year" property="statYear" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="pid" property="pid" jdbcType="BIGINT" />
    <result column="cid" property="cid" jdbcType="BIGINT" />
    <result column="metaid" property="metaid" jdbcType="BIGINT" />
    <result column="zsys" property="zsys" jdbcType="VARCHAR" />
    <result column="xuebu" property="xuebu" jdbcType="VARCHAR" />
    <result column="xingming" property="xingming" jdbcType="VARCHAR" />
    <result column="dxnf" property="dxnf" jdbcType="VARCHAR" />
    <result column="xingbie" property="xingbie" jdbcType="VARCHAR" />
    <result column="guoji" property="guoji" jdbcType="VARCHAR" />
    <result column="csny" property="csny" jdbcType="VARCHAR" />
    <result column="nianling" property="nianling" jdbcType="VARCHAR" />
    <result column="qssj" property="qssj" jdbcType="VARCHAR" />
    <result column="chushengdi" property="chushengdi" jdbcType="VARCHAR" />
    <result column="byyx1" property="byyx1" jdbcType="VARCHAR" />
    <result column="byyx2" property="byyx2" jdbcType="VARCHAR" />
    <result column="byyx3" property="byyx3" jdbcType="VARCHAR" />
    <result column="zhuanye" property="zhuanye" jdbcType="VARCHAR" />
    <result column="gzdw" property="gzdw" jdbcType="VARCHAR" />
    <result column="datasource_type" property="datasourceType" jdbcType="VARCHAR" />
    <result column="etl_datasource" property="etlDatasource" jdbcType="VARCHAR" />
    <result column="firstinput_time" property="firstinputTime" jdbcType="TIMESTAMP" />
    <result column="laterupdate_time" property="laterupdateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, stat_year, desc, pid, cid, metaid, zsys, xuebu, xingming, dxnf, xingbie, guoji, 
    csny, nianling, qssj, chushengdi, byyx1, byyx2, byyx3, zhuanye, gzdw, datasource_type, 
    etl_datasource, firstinput_time, laterupdate_time
  </sql>

  <select id="queryForeign" parameterType="cn.arp.trend.data.model.DO.ForeignQueryDO"
          resultType="java.util.HashMap">
    SELECT
      ANY_VALUE(guoji) AS guoji,
      COUNT(guoji) AS rs
    FROM
      (
      SELECT
        IFNULL(guoji, "未知") AS guoji
      FROM
        cas_academician_foreign
      <where>
        qssj IS NULL
        <choose>
          <when test="request.affiliation != null">
            AND (gzdw in (
            <foreach collection="request.affiliation" item="item" index="index" separator=",">
              #{item}
            </foreach>
            ))
          </when>
        </choose>
        <choose>
          <when test="request.flag == 'OR'">
            OR gzdw IS NULL
          </when>
        </choose>
      </where>
      UNION ALL
      SELECT
        IFNULL(guoji, "未知") AS guoji
      FROM
        cas_academician_cae_foreign
      <where>
        qssj IS NULL
        <choose>
          <when test="request.affiliation != null">
            AND (gzdw in (
            <foreach collection="request.affiliation" item="item" index="index" separator=",">
              #{item}
            </foreach>
            ))
          </when>
        </choose>
        <choose>
          <when test="request.flag == 'OR'">
            OR gzdw IS NULL
          </when>
        </choose>
      </where>
    ) AS a
    GROUP BY
      guoji
    ORDER BY
      rs DESC
  </select>

  <!--<select id="queryAcademician1" resultType="java.lang.String">
    SELECT
      DISTINCT IFNULL(xuebu, "未知") AS xuebu
    FROM (
      SELECT
        DISTINCT xuebu
      FROM
        cas_academician_foreign
      UNION ALL
      SELECT
        DISTINCT xuebu
      FROM
        cas_academician_china
    ) AS a
  </select>-->

</mapper>